<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="account_info" xml:space="preserve">
    <value>Account info</value>
  </data>
  <data name="bank_transfer" xml:space="preserve">
    <value>Pay by bank transfer.</value>
  </data>
  <data name="change" xml:space="preserve">
    <value>Change</value>
  </data>
  <data name="change_account_data" xml:space="preserve">
    <value>Change account data</value>
  </data>
  <data name="choose_bank_prompt" xml:space="preserve">
    <value>Kies uw bank</value>
  </data>
  <data name="choose_payment_method" xml:space="preserve">
    <value>Choose your payment method:</value>
  </data>
  <data name="city" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="confirm_order_address" xml:space="preserve">
    <value>Confirm your order and shipping address</value>
  </data>
  <data name="create" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="createaccount_welcome" xml:space="preserve">
    <value>Welcome to the account creation page! Please fill in the fields below</value>
  </data>
  <data name="create_account" xml:space="preserve">
    <value>Create account</value>
  </data>
  <data name="email" xml:space="preserve">
    <value>E-mail address</value>
  </data>
  <data name="error_enter_code" xml:space="preserve">
    <value>Enter your code</value>
  </data>
  <data name="error_enter_email" xml:space="preserve">
    <value>Enter your e-mail</value>
  </data>
  <data name="error_enter_password" xml:space="preserve">
    <value>Enter your password</value>
  </data>
  <data name="first_name" xml:space="preserve">
    <value>First name</value>
  </data>
  <data name="go" xml:space="preserve">
    <value>Go!</value>
  </data>
  <data name="group_pictures" xml:space="preserve">
    <value>Group pictures</value>
  </data>
  <data name="house_number" xml:space="preserve">
    <value>House number</value>
  </data>
  <data name="IBAN" xml:space="preserve">
    <value>IBAN</value>
  </data>
  <data name="ideal" xml:space="preserve">
    <value>IDeal</value>
  </data>
  <data name="ideal_description" xml:space="preserve">
    <value>The most used payment method in the Netherlands</value>
  </data>
  <data name="last_name" xml:space="preserve">
    <value>Last name</value>
  </data>
  <data name="logout" xml:space="preserve">
    <value>Log out</value>
  </data>
  <data name="my_account" xml:space="preserve">
    <value>My account</value>
  </data>
  <data name="order_code" xml:space="preserve">
    <value>Code</value>
  </data>
  <data name="order_code_title" xml:space="preserve">
    <value>Or insert your order code</value>
  </data>
  <data name="order_history" xml:space="preserve">
    <value>Order history</value>
  </data>
  <data name="order_info" xml:space="preserve">
    <value>Order info</value>
  </data>
  <data name="password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="phone_number" xml:space="preserve">
    <value>Phone number</value>
  </data>
  <data name="pictures" xml:space="preserve">
    <value>Pictures</value>
  </data>
  <data name="place_order" xml:space="preserve">
    <value>Place order</value>
  </data>
  <data name="remember_me" xml:space="preserve">
    <value>Remember me</value>
  </data>
  <data name="save_changes" xml:space="preserve">
    <value>Save changes</value>
  </data>
  <data name="search_for" xml:space="preserve">
    <value>Search for...</value>
  </data>
  <data name="select_bank_prompt" xml:space="preserve">
    <value>Select your bank</value>
  </data>
  <data name="shopping_cart" xml:space="preserve">
    <value>Shopping cart</value>
  </data>
  <data name="sign_in" xml:space="preserve">
    <value>Sign in</value>
  </data>
  <data name="sign_in_title" xml:space="preserve">
    <value>Please sign in-</value>
  </data>
  <data name="street_name" xml:space="preserve">
    <value>Street name</value>
  </data>
  <data name="toggle_menu" xml:space="preserve">
    <value>Toggle Menu</value>
  </data>
  <data name="toggle_menu_description" xml:space="preserve">
    <value>Click to Toggle button for the Menu to appear or dissapear</value>
  </data>
  <data name="zipcode" xml:space="preserve">
    <value>Zipcode</value>
  </data>
  <data name="account" xml:space="preserve">
    <value>Account</value>
  </data>
  <data name="finance" xml:space="preserve">
    <value>Finance</value>
  </data>
  <data name="orders" xml:space="preserve">
    <value>Orders</value>
  </data>
  <data name="stock_overview" xml:space="preserve">
    <value>Stock overview</value>
  </data>
  <data name="account_id" xml:space="preserve">
    <value>Account ID</value>
  </data>
  <data name="alter_amount" xml:space="preserve">
    <value>Alter amount</value>
  </data>
  <data name="amount" xml:space="preserve">
    <value>Amount</value>
  </data>
  <data name="available" xml:space="preserve">
    <value>Available</value>
  </data>
  <data name="black_white" xml:space="preserve">
    <value>Black &amp; White</value>
  </data>
  <data name="color" xml:space="preserve">
    <value>Color</value>
  </data>
  <data name="crop" xml:space="preserve">
    <value>Crop</value>
  </data>
  <data name="date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="download" xml:space="preserve">
    <value>Download</value>
  </data>
  <data name="error_cant_send_mail" xml:space="preserve">
    <value>Could not send mail to</value>
  </data>
  <data name="error_enter_search_term" xml:space="preserve">
    <value>Enter a search term</value>
  </data>
  <data name="error_login" xml:space="preserve">
    <value>Wrong e-mail address or password</value>
  </data>
  <data name="error_no_image_found" xml:space="preserve">
    <value>No Image found, please the contact administrator</value>
  </data>
  <data name="error_user_type" xml:space="preserve">
    <value>Unknown user type</value>
  </data>
  <data name="error_wrong_code" xml:space="preserve">
    <value>The code you entered is not valid</value>
  </data>
  <data name="error_wrong_email" xml:space="preserve">
    <value>Please enter a valid email address</value>
  </data>
  <data name="filter" xml:space="preserve">
    <value>Filter</value>
  </data>
  <data name="google_checkout_payment" xml:space="preserve">
    <value>Google-checkout payment</value>
  </data>
  <data name="ideal_payment" xml:space="preserve">
    <value />
  </data>
  <data name="image" xml:space="preserve">
    <value>Image</value>
  </data>
  <data name="image_preview" xml:space="preserve">
    <value>Image preview</value>
  </data>
  <data name="mail_sent" xml:space="preserve">
    <value>Your mail has been sent to</value>
  </data>
  <data name="money_owed" xml:space="preserve">
    <value>Money owed</value>
  </data>
  <data name="my_codes" xml:space="preserve">
    <value>My Codes</value>
  </data>
  <data name="my_products" xml:space="preserve">
    <value>My Products</value>
  </data>
  <data name="ogone_payment" xml:space="preserve">
    <value />
  </data>
  <data name="order_id" xml:space="preserve">
    <value>Order ID</value>
  </data>
  <data name="order_image" xml:space="preserve">
    <value>Order image</value>
  </data>
  <data name="payment_check" xml:space="preserve">
    <value>Payment Check</value>
  </data>
  <data name="payment_type" xml:space="preserve">
    <value>Payment type</value>
  </data>
  <data name="photographer_id" xml:space="preserve">
    <value>Photographer ID</value>
  </data>
  <data name="photo_id" xml:space="preserve">
    <value>Photo ID</value>
  </data>
  <data name="price" xml:space="preserve">
    <value>Price</value>
  </data>
  <data name="products" xml:space="preserve">
    <value>Products</value>
  </data>
  <data name="product_description" xml:space="preserve">
    <value>Product Description</value>
  </data>
  <data name="product_id" xml:space="preserve">
    <value>Product ID</value>
  </data>
  <data name="product_type" xml:space="preserve">
    <value>Product Type</value>
  </data>
  <data name="purchase_id" xml:space="preserve">
    <value>Purchase ID</value>
  </data>
  <data name="quantity" xml:space="preserve">
    <value>Quantity</value>
  </data>
  <data name="remove" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="reorder" xml:space="preserve">
    <value>Re-order</value>
  </data>
  <data name="send" xml:space="preserve">
    <value>Send</value>
  </data>
  <data name="sepia" xml:space="preserve">
    <value>Sepia</value>
  </data>
  <data name="ship_orders" xml:space="preserve">
    <value>Ship orders</value>
  </data>
  <data name="status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="stock" xml:space="preserve">
    <value>Stock</value>
  </data>
  <data name="times_used" xml:space="preserve">
    <value>Times used</value>
  </data>
  <data name="total" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="view" xml:space="preserve">
    <value>View</value>
  </data>
  <data name="view_products" xml:space="preserve">
    <value>View Products</value>
  </data>
  <data name="your_codes_are" xml:space="preserve">
    <value>Your codes are:</value>
  </data>
  <data name="your_codes_description" xml:space="preserve">
    <value>You can use these codes on thephotoshop.nl when creating an account.</value>
  </data>
  <data name="your_order_codes" xml:space="preserve">
    <value>Your codes from The Photoshop</value>
  </data>
</root>